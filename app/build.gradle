def isIntegratedMode = isIntegratedMode.toBoolean()

if (isIntegratedMode) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    def versionConfig = rootProject.extensions.getByName("ext")
    compileSdkVersion versionConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion versionConfig.minSdkVersion

        if (isIntegratedMode) {
            applicationId versionConfig.applicationId
            targetSdkVersion versionConfig.targetSdkVersion
            versionCode versionConfig.versionCode
            versionName versionConfig.versionName
            testInstrumentationRunner versionConfig.testInstrumentationRunner
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    signingConfigs {
        /*
        * so文件需验证签名 所有debug也要加上签名
        * 关闭后核心代码将无法调用
        * */
        release {
            storeFile file('../jks/comprehensive.jks')//签名文件路径
            storePassword "comprehensive"
            keyAlias "comprehensive"
            keyPassword "comprehensive"
        }
    }

    if (isIntegratedMode) {
        buildTypes {
            release {
                minifyEnabled true   //开启混淆
                zipAlignEnabled true  //压缩优化
                shrinkResources true  //移出无用资源
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }

            debug {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //引入 base
    implementation project(':functionLibrary:base')

    if (isIntegratedMode) {
        implementation project(':businessMode:launch')
        implementation project(':businessMode:news')
        implementation project(':businessMode:home')
    }

    //项目初始化引入的dependencies
    implementation supportDependencies.appcompatV7
    implementation supportDependencies.constraintLayout
    implementation supportDependencies.recyclerview
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation testDependencies.junit
    androidTestImplementation testDependencies.runner
    androidTestImplementation testDependencies.espresso
    //引入 rxLifecycle
    implementation dataDependencies.rxlifecycle
    implementation dataDependencies.rxlifecycleAndroid
    //alibaba路由
    implementation dataDependencies.routeApi
    annotationProcessor dataDependencies.routeCompiler

}
