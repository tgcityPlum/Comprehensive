def isIntegratedMode = isIntegratedMode.toBoolean()
def modeType = MODE_TYPE as int
def isNewsMode = !isIntegratedMode && modeType == 5
//def isNewsMode = false

if (isNewsMode) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    def versionConfig = rootProject.extensions.getByName("ext")

    compileSdkVersion versionConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion versionConfig.minSdkVersion

        if (isNewsMode) {
            applicationId versionConfig.applicationId
            targetSdkVersion versionConfig.targetSdkVersion
            versionCode versionConfig.versionCode
            versionName versionConfig.versionName
            testInstrumentationRunner versionConfig.testInstrumentationRunner
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isNewsMode) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下屏蔽debug中所有class类文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //引入 base mvp refreshview network
    implementation project(':functionLibrary:base')
    implementation project(':commonLibrary:mvp')
    implementation project(':commonLibrary:refreshview')
    implementation project(':commonLibrary:refreshadapter')
    implementation project(':commonLibrary:network')

    //项目初始化引入的dependencies
    implementation supportDependencies.appcompatV7
    implementation supportDependencies.constraintLayout
    implementation supportDependencies.recyclerview
    //引入 rxLifecycle
    implementation dataDependencies.rxlifecycle
    implementation dataDependencies.rxlifecycleAndroid
    //alibaba路由
    implementation dataDependencies.routeApi
    annotationProcessor dataDependencies.routeCompiler

}
